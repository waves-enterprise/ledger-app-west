name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  job_build_nano_S:
    name: Build NanoS
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make
          cp bin/app.elf west_nanos.elf

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: app-west
          path: ./west_nanos.elf
          if-no-files-found: error

  job_build_nano_SP:
    name: Build NanoSP
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make BOLOS_SDK=$NANOSP_SDK
          cp bin/app.elf west_nanosp.elf

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: app-west
          path: ./west_nanosp.elf
          if-no-files-found: error

  job_build_nano_X:
    name: Build NanoX
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make BOLOS_SDK=$NANOX_SDK
          cp bin/app.elf west_nanox.elf

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: app-west
          path: ./west_nanox.elf
          if-no-files-found: error

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - uses: actions/checkout@v2
      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_test_nano_S:
    name: Test for Nano S
    needs: job_build_nano_S
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      ports:
        - 9998:9998
        - 9999:9999
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Download app binary
        uses: actions/download-artifact@v2
        with:
          name: app-west
          path: bin

      - name: Run test
        run: |
          apt update && apt install -qy gcc  # /!\ workaround for pysha3
          nohup bash -c "python /speculos/speculos.py bin/west_nanos.elf --apdu-port 9999 --button-port 9998 --display headless" > speculos_nanos.log 2<&1 &
          cd tests && pip install -r requirements.txt && pytest --headless

      - name: Upload Speculos log
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: speculos-log
          path: "speculos_*.log"


  job_test_nano_SP:
    name: Test for Nano S+
    needs: job_build_nano_SP
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      ports:
        - 9998:9998
        - 9999:9999
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Download app binary
        uses: actions/download-artifact@v2
        with:
          name: app-west
          path: bin

      - name: Run test
        run: |
          apt update && apt install -qy gcc  # /!\ workaround for pysha3
          nohup bash -c "python /speculos/speculos.py bin/west_nanosp.elf --apdu-port 9999 --button-port 9998 --display headless -m nanosp" > speculos_nanosp.log 2<&1 &
          cd tests && pip install -r requirements.txt && pytest --headless --model nanosp

      - name: Upload Speculos log
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: speculos-log
          path: "speculos_*.log"


  job_test_nano_X:
    name: Test for Nano X
    needs: job_build_nano_X
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      ports:
        - 9998:9998
        - 9999:9999
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Download app binary
        uses: actions/download-artifact@v2
        with:
          name: app-west
          path: bin

      - name: Run test
        run: |
          apt update && apt install -qy gcc  # /!\ workaround for pysha3
          nohup bash -c "python /speculos/speculos.py bin/west_nanox.elf --apdu-port 9999 --button-port 9998 --display headless -m nanox" > speculos_nanox.log 2<&1 &
          cd tests && pip install -r requirements.txt && pytest --headless --model nanox

      - name: Upload Speculos log
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: speculos-log
          path: "speculos_*.log"
